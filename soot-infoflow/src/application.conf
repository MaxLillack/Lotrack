
Tests : {
	features : {
		A : { index: 0, precise: true }
		B : { index: 1, precise: true }
		Foo : { index: 2, precise: false}
		Bar : { index: 3, precise: false}
		C : { index: 4, precise: true }
		D : { index: 5, precise: true }
		E : { index: 6, precise: true }
	}
	
	fieldRefs : [ 
			{ name: "<soot.jimple.infoflow.test.loadtime.FeatureBase: java.lang.String foo>", feature: ${Tests.features.Foo} }
			{ name: "<soot.jimple.infoflow.test.loadtime.FeatureBase: java.lang.String bar>", feature: ${Tests.features.Bar} }
	]
	
	methods : [
		{ name: "boolean featureA()", feature: ${Tests.features.A} }
		{ name: "boolean featureB()", feature: ${Tests.features.B} }
		{ name: "boolean featureC()", feature: ${Tests.features.C} }
		{ name: "int featureD()", feature: ${Tests.features.D} }
		{ name: "boolean featureE()", feature: ${Tests.features.E} }
	]
	
	expectedResults : [
		 { 
		   className : "soot.jimple.infoflow.test.loadtime.LoadTimeTestCode" 
		   constraints: [ 
		   	   // sample01
		       { jimpleLine: 24, lineText: "", constraint: "true" }
			   { jimpleLine: 26, lineText: "", constraint: "true" }
			   { jimpleLine: 28, lineText: "", constraint: "{A}" }
			   { jimpleLine: 30, lineText: "", constraint: "{A}" }
			   { jimpleLine: 32, lineText: "", constraint: "{A ^ B}" }
			   { jimpleLine: 36, lineText: "", constraint: "{A ^ !B}" }
			   { jimpleLine: 42, lineText: "", constraint: "{B}" }
			   
			   // sample02
			   { jimpleLine: 56, lineText: "", constraint: "{!A}" }
			   
			   // sample03
			   { jimpleLine: 70, lineText: "", constraint: "true" }
			   { jimpleLine: 72, lineText: "", constraint: "{A}" }
			   { jimpleLine: 79, lineText: "", constraint: "true" }
			   
			   // sample04
			   { jimpleLine: 93, lineText: "", constraint: "{A}" }
			   { jimpleLine: 99, lineText: "", constraint: "{!A}" }
			   
			   // sample05
			   { jimpleLine: 138, lineText: "", constraint: "{!A ^ B} {A}" }
			   
			//   { jimpleLine: 146, lineText: "", constraint: "false" }
			
			   // sample07
			   { jimpleLine: 188, lineText: "", constraint: "{Foo}" }
			   
			   // sample08
			   { jimpleLine: 205, lineText: "", constraint: "{Foo}" }
			   { jimpleLine: 210, lineText: "", constraint: "{Foo ^ Bar}" }
			   // sample09
			   { jimpleLine: 230, lineText: "", constraint: "{Foo ^ Bar}" }
			   // sample14
			   { jimpleLine: 244, lineText: "", constraint: "{A}" }
			   { jimpleLine: 247, lineText: "", constraint: "{!A}" }
			   { jimpleLine: 271, lineText: "", constraint: "{A ^ B}" }
			   { jimpleLine: 274, lineText: "", constraint: "{!A} {A ^ !B}" }
			   
			   // sample15
			   { jimpleLine: 287, lineText: "", constraint: "{Foo}" }
			   { jimpleLine: 291, lineText: "", constraint: "{!Foo}" }
			   
			   // sample16
			   { jimpleLine: 308, lineText: "i = 0", constraint: "{Foo}" }
			   { jimpleLine: 312, lineText: "a = 0", constraint: "{!Foo}" }
			   
			   // sample22
			   { jimpleLine: 326, lineText: "a#2 = 0", constraint: "{Foo}" }
			   { jimpleLine: 330, lineText: "a#2 = 1", constraint: "{!Foo}" }
			   { jimpleLine: 339, lineText: "l2 = 0", constraint: "{!A ^ !Foo} {A}" }
			   
			   //sample23
			   { jimpleLine: 358, lineText: "l1 = 0", constraint: "{Foo}" }
			   { jimpleLine: 362, lineText: "return", constraint: "{!Foo}" }
			   { jimpleLine: 365, lineText: "a = 0", constraint: "true" }
			   
			   //default1
			   { jimpleLine: 358, lineText: "", constraint: "{Foo}" }
			   
		   ]
		 }
	]
}

defaultTests : {
	features : {
		A : { index: 0, precise: true }
		B : { index: 1, precise: true }
		Foo : { index: 2, precise: false}
		Bar : { index: 3, precise: false}
	}
	
	fieldRefs : [ 
		{ name: "<soot.jimple.infoflow.test.loadtime.FeatureBase: java.lang.String foo>", feature: ${Tests.features.Foo} }
		{ name: "<soot.jimple.infoflow.test.loadtime.FeatureBase: java.lang.String bar>", feature: ${Tests.features.Bar} }
	]
	
	methods : [
		{ name: "boolean featureA()", feature: ${Tests.features.A} }
		{ name: "boolean featureB()", feature: ${Tests.features.B} }
	]
	
	expectedResults : [

	]
}

ConnectBot : {
	include "Template"
	
	srcPath : "C:\\Users\\Max\\workspace\\connectbot\\src\\"
	apk : "ConnectBot-git-master-2013-10-06_10-16-09.apk"
	
	expectedResults : [
		 { 
		   className : "org.connectbot.ActionBarWrapper" 
		   constraints: [
			{ jimpleLine: 35, lineText: "r2 = new org.connectbot.ActionBarWrapper$DummyActionBar", constraint: "!(SDK >= 11)" }
			{ jimpleLine: 37, lineText: "specialinvoke r2.<org.connectbot.ActionBarWrapper$DummyActionBar", constraint: "!(SDK >= 11)" }
			{ jimpleLine: 39, lineText: "return r2", constraint: "!(SDK >= 11)" }
			{ jimpleLine: 42, lineText: "r3 = new org.connectbot.ActionBarWrapper$RealActionBar", constraint: "SDK >= 11" }
			{ jimpleLine: 44, lineText: "specialinvoke r2.<org.connectbot.ActionBarWrapper$DummyActionBar", constraint: "SDK >= 11" }
			{ jimpleLine: 46, lineText: "return r3", constraint: "SDK >= 11"  }
		   ]
		 }
		 { 
		   className : "org.connectbot.HostListActivity" 
		   constraints: [
				{ jimpleLine: 156, lineText: "$r6 = <android.os.Build: java.lang.String DEVICE>", constraint: "MANUFACTURER_Alpha" }
				{ jimpleLine: 162, lineText: "$r7 = $r0.<org.connectbot.HostListActivity: android.content.SharedPreferences prefs>", constraint: "(MANUFACTURER_Alpha ^ DEVICE_Alpha)" }
		   ]
		 }
		 { 
		   className : "org.connectbot.ConsoleActivity" 
		   constraints: [
		       { jimpleLine: 332, lineText: "", constraint: "KEYBOARD = 1" }
		       { jimpleLine: 363, lineText: "", constraint: "!(KEYBOARD = 1)" }
		       { jimpleLine: 720, lineText: "", constraint: "KEYBOARD = 2" }
		       { jimpleLine: 957, lineText: "", constraint: "!(KEYBOARD = 2)" }
		       { jimpleLine: 1019, lineText: "", constraint: "KEYBOARD = 2" }
		       { jimpleLine: 1057, lineText: "", constraint: "KEYBOARD = 2" }
		       { jimpleLine: 1086, lineText: "", constraint: "KEYBOARD = 2" }
		       { jimpleLine: 1126, lineText: "", constraint: "KEYBOARD = 2" }
		       { jimpleLine: 1162, lineText: "", constraint: "KEYBOARD = 2" }
		       { jimpleLine: 1191, lineText: "", constraint: "KEYBOARD = 2" }
		   ]
		 }
		 { 
		   className : "org.connectbot.PubkeyListActivity" 
		   constraints: [
		       { jimpleLine: 754, lineText: "$r7 = \"mounted\"", constraint: "!(STORAGE_Alpha)" }
		       { jimpleLine: 775, lineText: "$r2 = new java.util.LinkedList;", constraint: "STORAGE_Alpha || STORAGE_Epsilon" }
		   ]
		 }		 
		 { 
		   className : "org.connectbot.service.TerminalManager" 
		   constraints: [
		   	    // vibrate() is not called
		   ]
		 }			 
		 
	]
}

Orbot : {
	include "Template"
	
	srcPath : "C:\\Users\\Max\\workspace\\orbot\\src\\"	
	apk : "org.torproject.android.apk"
	
	expectedResults : [
		 { 
		   className : "org.torproject.android.service.TorService" 
		   constraints: [
		    { jimpleLine: 20, lineText: "", constraint: "{SDK}" }
			{ jimpleLine: 21, lineText: "", constraint: "{SDK}" }
		   ]
		 }
	]
}

Adblock : { 
	include "Template"
	
	srcPath : "C:\\Users\\Max\\workspace\\adblock\\src\\"	
	apk : "adblockplusandroid-1.1.3.apk"
}

Avare : { 
	include "Template" 

	srcPath : "C:\\Users\\Max\\temp\\avare\\app\\src\\main\\java\\"
	apk : "Avare.apk"
}

VLC : { 
	include "Template" 
	
	srcPath : "C:\\Users\\Max\\workspace\\vlc\\vlc-android\\src\\"
	apk : "org.videolan.vlc_1303.apk"
	
	expectedResults : [
		 { 
		   className : "org.videolan.libvlc.LibVLC" 
		   constraints: [
		    { jimpleLine: 68, lineText: "", constraint: "{SDK}" }
			{ jimpleLine: 80, lineText: "", constraint: "{SDK}" }
			{ jimpleLine: 96, lineText: "", constraint: "{SDK}" }
		   ]
		 }
		 { 
		   className : "org.videolan.libvlc.LibVlcUtil" 
		   constraints: [
		    { jimpleLine: 8, lineText: "", constraint: "{SDK}" }
			{ jimpleLine: 11, lineText: "", constraint: "{SDK}" }
		   ]
		 }
		 { 
		 	// PHONE?
		   className : "org.videolan.vlc.Util" 
		   constraints: [
		    { jimpleLine: 302, lineText: "", constraint: "{SDK}" }
			{ jimpleLine: 305, lineText: "", constraint: "{SDK}" }
		   ]
		 }		 
	]
}

//BarcodeScanner  : { 
//	include "Template" 
//	apk : "BarcodeScanner-4.5.1.apk"
//}
//
//FBReaderJ  : { 
//	include "Template" 
//	srcPath : "C:\\Users\\Max\\workspace\\FBReaderJ\\src\\"
//	apk : "FBReaderJ.apk"
//}
//
//OsmAnd : { 
//	include "Template" 
//	apk : "net.osmand.plus_145.apk"
//	srcPath : "C:\\Users\\Max\\workspace\\Osmand\\OsmAnd-java\\src\\"
//}
//
Tomdroid : { 
	include "Template" 
	srcPath : "C:\\Users\\Max\\workspace\\tomdroid\\src\\"
	apk : "tomdroid-0.7.5.apk"
}

Wikipedia : { 
	include "Template" 
	srcPath : "C:\\Users\\Max\\workspace\\WikipediaMobile\\src\\"
	apk : "org.wikipedia_25.apk"
}

systemappmover : { 
	include "Template" 
	srcPath : "C:\\Users\\Max\\workspace\\SystemAppMover\\src\\"
	apk : "de.j4velin.systemappmover_20.apk"
}
//
//zeroxbenchmark : { 
//	include "Template" 
//	srcPath : "C:\\Users\\Max\\workspace\\0xbench\\src\\"
//	apk : "org.zeroxlab.zeroxbenchmark_9.apk"
//}
//
//twentyfourhour : { 
//	include "Template" 
//	srcPath : "C:\\Users\\Max\\workspace\\24hAnalogWidget\\src\\"
//	apk : "info.staticfree.android.twentyfourhour_8.apk"
//}
//
//fahrplan : { 
//	include "Template" 
//	apk : "nerd.tuxmobil.fahrplan.congress_29.apk"
//	srcPath : "C:\\Users\\Max\\workspace\\CampFahrplan\\src\\"
//}
//
//editor : { 
//	include "Template" 
//	apk : "com.jecelyin.editor_39.apk"	
//	srcPath : "C:\\Users\\Max\\workspace\\920-Text-Editor\\src\\"
//}
//
//atimetracker : { 
//	include "Template" 
//	apk : "com.markuspage.android.atimetracker_17.apk"
//	srcPath : "C:\\Users\\Max\\workspace\\ATimeTracker\\src\\"
//}
//
//
//Vol : {
//	include "Template"
//	apk : "a2dp.Vol_120.apk"
//	srcPath : "C:\\Users\\Max\\workspace\\a2dpvolume\\src\\"
//	
//	expectedResults : [
//	 { 
//	   className : "a2dp.Vol.main" 
//	   constraints: [
//	    { jimpleLine: 1057, lineText: "", constraint: "{BLUETOOTH}" }
//		{ jimpleLine: 1058, lineText: "", constraint: "{BLUETOOTH}" }
//		{ jimpleLine: 1059, lineText: "", constraint: "{BLUETOOTH}" }
//		{ jimpleLine: 1060, lineText: "", constraint: "{BLUETOOTH}" }
//		{ jimpleLine: 1083, lineText: "", constraint: "{!BLUETOOTH}" }
//	   ]
//	 }
//   ]
//}
//
//agit : { 
//	include "Template" 
//	apk : "com.madgag.agit_130400912.apk"
//	srcPath : "C:\\Users\\Max\\workspace\\agit\\src\\"
//}
//
//// Bug in apk
////aagtl : { 
////	include "Template" 
////	apk : "com.zoffcc.applications.aagtl_31.apk"
////	srcPath : "C:\\Users\\Max\\workspace\\aagtl\\src\\"
////}
//
//PaperToss : { 
//	include "Template" 
//	apk : "Paper Toss.apk"
//}
//
//Skype : { 
//	include "Template" 
//	apk : "com.skype.raider.apk"
//}
//
//Facebook : { 
//	include "Template" 
//	apk : "com.facebook.katana.apk"
//}
//
//FacebookMessenger : { 
//	include "Template" 
//	apk : "com.facebook.orca.apk"
//}
//
//Quizduell : { 
//	include "Template" 
//	apk : "se.feomedia.quizkampen.de.lite.apk"
//}
//
//Telegram : { 
//	include "Template" 
//	apk : "org.telegram.messenger.apk"
//}
//
//FarmHeroesSaga : { 
//	include "Template" 
//	apk : "com.king.farmheroessaga.apk"
//}
//
//
//ab804c147dc5be4eaf937650a97eed9590e83cbaf2d8e1f071cc9c782009d1c1 : { 
//	include "Template" 
//	apk : "ab804c147dc5be4eaf937650a97eed9590e83cbaf2d8e1f071cc9c782009d1c1.apk"
//}
//
//550c586d3a55501d71a5166eecd6eb5050ce42b2c33efbe1cba3bb7ab077ac7f : { 
//	include "Template" 
//	apk : "550c586d3a55501d71a5166eecd6eb5050ce42b2c33efbe1cba3bb7ab077ac7f.apk"
//}
//
//9438cdd4514189f91958bdf70dabd4bf3aa1d880b77a726e8c96c3e1933a7e0e : { 
//	include "Template" 
//	apk : "9438cdd4514189f91958bdf70dabd4bf3aa1d880b77a726e8c96c3e1933a7e0e.apk"
//}
//
//61d7053e3fcbd470b023c2fdc57a7815dcc3022c7166c311744059dcc3f182f1 : { 
//	include "Template" 
//	apk : "61d7053e3fcbd470b023c2fdc57a7815dcc3022c7166c311744059dcc3f182f1.apk"
//}
//
//a644b93dd4e32073aed69d9522534b0bc4a5195552a3f5b4036707ff15cd904d : { 
//	include "Template" 
//	apk : "a644b93dd4e32073aed69d9522534b0bc4a5195552a3f5b4036707ff15cd904d.apk"
//}
//
//11dfad9967b2f123a798c21c9ac5c67ce5d258a2c3bfd1c21c2ebbf0b320e7d4 : { 
//	include "Template" 
//	apk : "11dfad9967b2f123a798c21c9ac5c67ce5d258a2c3bfd1c21c2ebbf0b320e7d4.apk"
//}
//
//512815d04fb29dbedb2b920c118a4d21e89408f5e074266e5475aa02ed18a476 : { 
//	include "Template" 
//	apk : "512815d04fb29dbedb2b920c118a4d21e89408f5e074266e5475aa02ed18a476.apk"
//}
//
//6b9b8aeeca395563ca8e00dcb3b755fcae2c375099af5ee51f6755ae81972a97 : { 
//	include "Template" 
//	apk : "6b9b8aeeca395563ca8e00dcb3b755fcae2c375099af5ee51f6755ae81972a97.apk"
//}
//
//031fac009c95d0b9bb8bf38f81bbb3065db8b6aaf4b78ebf9bf9d88eff34fab3 : { 
//	include "Template" 
//	apk : "031fac009c95d0b9bb8bf38f81bbb3065db8b6aaf4b78ebf9bf9d88eff34fab3.apk"
//}
//
//25dc1457f66128c80cfcbe10a37f4072a942ec8521fe53705b52c4ec13bf528f : { 
//	include "Template" 
//	apk : "25dc1457f66128c80cfcbe10a37f4072a942ec8521fe53705b52c4ec13bf528f.apk"
//}
//
//1165c3e657891a708f73eedad0a6ef27fae84d6acf766f59cb8beeae31a27e1b : { 
//	include "Template" 
//	apk : "1165c3e657891a708f73eedad0a6ef27fae84d6acf766f59cb8beeae31a27e1b.apk"
//}
//
//36aa8d3655fcb2cda38ae67dd9b703ae26d82a0b98846c5a340cb14cc8c2cd26 : { 
//	include "Template" 
//	apk : "36aa8d3655fcb2cda38ae67dd9b703ae26d82a0b98846c5a340cb14cc8c2cd26.apk"
//}
//
//c93ae23a91f1a9ccfbce16f42694b3c44f595ce0ad42c50d9b8c5515d9fdce11 : { 
//	include "Template" 
//	apk : "c93ae23a91f1a9ccfbce16f42694b3c44f595ce0ad42c50d9b8c5515d9fdce11.apk"
//}
//
//6facb8e8ba389653e2110f4ca3ac41718d7119aed3c26b661e2801223c264667 : { 
//	include "Template" 
//	apk : "6facb8e8ba389653e2110f4ca3ac41718d7119aed3c26b661e2801223c264667.apk"
//}
//
//09530426c756f0816a8a59014851d8851194ac47fa06e8b579feb8d53e99d550 : { 
//	include "Template" 
//	apk : "09530426c756f0816a8a59014851d8851194ac47fa06e8b579feb8d53e99d550.apk"
//}
//
//2ab2e369a2f21bd3a33e073c7a53b38aa461756f03e5bb4ed0acb64d6caad497 : { 
//	include "Template" 
//	apk : "2ab2e369a2f21bd3a33e073c7a53b38aa461756f03e5bb4ed0acb64d6caad497.apk"
//}
//
//d9362057fd615a2962f650f81a4eb8534942500bfacb8a61fd99cc19a4369132 : { 
//	include "Template" 
//	apk : "d9362057fd615a2962f650f81a4eb8534942500bfacb8a61fd99cc19a4369132.apk"
//}
//
//f54cdce10eb980e1ad8d4ee80dc6a1f4c8d38ec1636ed7f42da4acb572de0431 : { 
//	include "Template" 
//	apk : "f54cdce10eb980e1ad8d4ee80dc6a1f4c8d38ec1636ed7f42da4acb572de0431.apk"
//}
//
//43f527227b238829c9a26b6883f0df94dc7b26afac4b5e3fd7ef230e1d97eddd : { 
//	include "Template" 
//	apk : "43f527227b238829c9a26b6883f0df94dc7b26afac4b5e3fd7ef230e1d97eddd.apk"
//}
//
//306f298baeb293ad27069d286aab1192f497f3b9ca765b33ae498f1d63c6a4d3 : { 
//	include "Template" 
//	apk : "306f298baeb293ad27069d286aab1192f497f3b9ca765b33ae498f1d63c6a4d3.apk"
//}
//
//// EVALUATION
am_ed_importcontacts_10304 : { 
	include "Template" 
	apk : "am.ed.importcontacts_10304.apk"
	srcPath : "C:\\Users\\Max\\workspace\\LotrackEvaluationAndroid\\am.ed.importcontacts_10304_src\\src\\"
	expectedResults : [
		 { 
		   className : "am.ed.importcontacts.ConfigureVCF" 
		   constraints: [
		    { jimpleLine: 139, lineText: "", constraint: "{!STORAGE}" }
			{ jimpleLine: 156, lineText: "", constraint: "{!STORAGE}" }
		   ]
		 }
	]
}

app_openconnect_819 : {
	include "Template"
	apk : "app.openconnect_819.apk"
}

at_bitfire_davdroid_35 : {
	include "Template"
	apk : "at.bitfire.davdroid_35.apk"
}

caldwell_ben_bites_4 : {
	include "Template"
	apk : "caldwell.ben.bites_4.apk"
}

com_alfray_timeriffic_10905 : {
	include "Template"
	apk : "com.alfray.timeriffic_10905.apk"
}

com_amphoras_tpthelper_24 : {
	include "Template"
	apk : "com.amphoras.tpthelper_24.apk"
}

com_android_inputmethod_latin_4424 : {
	include "Template"
	apk : "com.android.inputmethod.latin_4424.apk"
}

com_androidemu_gba_6 : {
	include "Template"
	apk : "com.androidemu.gba_6.apk"
}

com_androidemu_gbc_32 : {
	include "Template"
	apk : "com.androidemu.gbc_32.apk"
}

com_androidemu_nes_61 : {
	include "Template"
	apk : "com.androidemu.nes_61.apk"
}

com_anysoftkeyboard_languagepack_malayalam_2 : {
	include "Template"
	apk : "com.anysoftkeyboard.languagepack.malayalam_2.apk"
}

com_beem_project_beem_15 : {
	include "Template"
	apk : "com.beem.project.beem_15.apk"
}

com_brewcrewfoo_performance_4 : {
	include "Template"
	apk : "com.brewcrewfoo.performance_4.apk"
}

com_cepmuvakkit_times_200 : {
	include "Template"
	apk : "com.cepmuvakkit.times_200.apk"
}

com_cr5315_cfdc_18 : {
	include "Template"
	apk : "com.cr5315.cfdc_18.apk"
}

com_danvelazco_fbwrapper_20140104 : {
	include "Template"
	apk : "com.danvelazco.fbwrapper_20140104.apk"
	srcPath : "C:\\Users\\Max\\workspace\\LotrackEvaluationAndroid\\com.danvelazco.fbwrapper_20140104_src\\Tinfoil-for-Facebook\\src\\main\\java\\"
}

com_elsdoerfer_android_autostarts_26 : {
	include "Template"
	apk : "com.elsdoerfer.android.autostarts_26.apk"
}

com_github_grimpy_botifier_14 : {
	include "Template"
	apk : "com.github.grimpy.botifier_14.apk"
}

com_gluegadget_hndroid_3 : {
	include "Template"
	apk : "com.gluegadget.hndroid_3.apk"
}

com_googamaphone_typeandspeak_36 : {
	include "Template"
	apk : "com.googamaphone.typeandspeak_36.apk"
}

com_google_code_apps2org_200 : {
	include "Template"
	apk : "com.google.code.apps2org_200.apk"
}

com_gs_mobileprint_1 : {
	include "Template"
	apk : "com.gs.mobileprint_1.apk"
}

com_java_SmokeReducer_1 : {
	include "Template"
	apk : "com.java.SmokeReducer_1.apk"
}

com_jlyr_41 : {
	include "Template"
	apk : "com.jlyr_41.apk"
}

com_kai1973i_4 : {
	include "Template"
	apk : "com.kai1973i_4.apk"
}

com_kvance_Nectroid_11 : {
	include "Template"
	apk : "com.kvance.Nectroid_11.apk"
	srcPath : "C:\\Users\\Max\\workspace\\LotrackEvaluationAndroid\\com.kvance.Nectroid_11_src\\src\\"
}

com_kyakujin_android_tagnotepad_3 : {
	include "Template"
	apk : "com.kyakujin.android.tagnotepad_3.apk"
}

com_mareksebera_simpledilbert_32 : {
	include "Template"
	apk : "com.mareksebera.simpledilbert_32.apk"
}

com_mehmetakiftutuncu_eshotroid_6 : {
	include "Template"
	apk : "com.mehmetakiftutuncu.eshotroid_6.apk"
	srcPath : "C:\\Users\\Max\\Dropbox\\randomAPK\\com.mehmetakiftutuncu.eshotroid_6_src\\Eshotroid\\src\\"
}

com_menny_android_anysoftkeyboard_111 : {
	include "Template"
	apk : "com.menny.android.anysoftkeyboard_111.apk"
	srcPath : "C:\\Users\\Max\\workspace\\LotrackEvaluationAndroid\\com.menny.android.anysoftkeyboard_111_src\\src\\"	
}

com_pindroid_56 : {
	include "Template"
	apk : "com.pindroid_56.apk"
}

com_ridgelineapps_resdicegame_13 : {
	include "Template"
	apk : "com.ridgelineapps.resdicegame_13.apk"
}

com_roguetemple_hydroid_1500 : {
	include "Template"
	apk : "com.roguetemple.hydroid_1500.apk"
}

com_seafile_seadroid2_15 : {
	include "Template"
	apk : "com.seafile.seadroid2_15.apk"
}

com_seavenois_tetris_3 : {
	include "Template"
	apk : "com.seavenois.tetris_3.apk"
}

com_sgr_b2_compass_18 : {
	include "Template"
	apk : "com.sgr_b2.compass_18.apk"
}

com_smerty_ham_18 : {
	include "Template"
	apk : "com.smerty.ham_18.apk"
}

com_spazedog_mounts2sd_33 : {
	include "Template"
	apk : "com.spazedog.mounts2sd_33.apk"
	srcPath : "C:\\Users\\Max\\workspace\\LotrackEvaluationAndroid\\com.spazedog.mounts2sd_33_src\\src\\"
}

com_sputnik_wispr_147 : {
	include "Template"
	apk : "com.sputnik.wispr_147.apk"
}

com_ten15_diyfish_2 : {
	include "Template"
	apk : "com.ten15.diyfish_2.apk"
}

com_tkjelectronics_balanduino_1200050 : {
	include "Template"
	apk : "com.tkjelectronics.balanduino_1200050.apk"
}

com_traffar_game_of_life_2 : {
	include "Template"
	apk : "com.traffar.game_of_life_2.apk"
}

com_vonglasow_michael_satstat_60 : {
	include "Template"
	apk : "com.vonglasow.michael.satstat_60.apk"
}

com_xabber_androiddev_81 : {
	include "Template"
	apk : "com.xabber.androiddev_81.apk"
}

com_yubico_yubiclip_2 : {
	include "Template"
	apk : "com.yubico.yubiclip_2.apk"
}

com_zola_bmi_1 : {
	include "Template"
	apk : "com.zola.bmi_1.apk"
}

damo_three_ie_9 : {
	include "Template"
	apk : "damo.three.ie_9.apk"
}

de_onyxbits_textfiction_6 : {
	include "Template"
	apk : "de.onyxbits.textfiction_6.apk"
}

de_ub0r_android_websms_connector_gmx_3200000 : {
	include "Template"
	apk : "de.ub0r.android.websms.connector.gmx_3200000.apk"
}

edu_killerud_kitchentimer_5 : {
	include "Template"
	apk : "edu.killerud.kitchentimer_5.apk"
}

eu_e43_impeller_8007 : {
	include "Template"
	apk : "eu.e43.impeller_8007.apk"
	srcPath : "C:\\Users\\Max\\workspace\\LotrackEvaluationAndroid\\eu.e43.impeller_8006_src\\src\\"
}

eu_lighthouselabs_obd_reader_10 : {
	include "Template"
	apk : "eu.lighthouselabs.obd.reader_10.apk"
}

eu_siebeck_sipswitch_5 : {
	include "Template"
	apk : "eu.siebeck.sipswitch_5.apk"
}

eu_vranckaert_worktime_270 : {
	include "Template"
	apk : "eu.vranckaert.worktime_270.apk"
}

fr_gaulupeau_apps_InThePoche_8 : {
	include "Template"
	apk : "fr.gaulupeau.apps.InThePoche_8.apk"
}

fr_strasweb_asso_2 : {
	include "Template"
	apk : "fr.strasweb.asso_2.apk"
}

fr_xgouchet_texteditor_19 : {
	include "Template"
	apk : "fr.xgouchet.texteditor_19.apk"
}

headrevision_BehatReporter_5 : {
	include "Template"
	apk : "headrevision.BehatReporter_5.apk"
}

in_shick_diode_14 : {
	include "Template"
	apk : "in.shick.diode_14.apk"
}

jp_sblo_pandora_aGrep_11 : {
	include "Template"
	apk : "jp.sblo.pandora.aGrep_11.apk"
}

name_soulayrol_rhaa_sholi_4 : {
	include "Template"
	apk : "name.soulayrol.rhaa.sholi_4.apk"
}

net_bytten_xkcdviewer_32 : {
	include "Template"
	apk : "net.bytten.xkcdviewer_32.apk"
}

net_fred_feedex_41 : {
	include "Template"
	apk : "net.fred.feedex_41.apk"
}

net_lardcave_keepassnfc_2 : {
	include "Template"
	apk : "net.lardcave.keepassnfc_2.apk"
	srcPath : "C:\\Users\\Max\\workspace\\LotrackEvaluationAndroid\\net.lardcave.keepassnfc_2_src\\src\\"
}

net_nurik_roman_muzei_1008 : {
	include "Template"
	apk : "net.nurik.roman.muzei_1008.apk"
}

net_oschina_app_18 : {
	include "Template"
	apk : "net.oschina.app_18.apk"
	srcPath : "C:\\Users\\Max\\workspace\\LotrackEvaluationAndroid\\net.oschina.app_18_src\\src\\"
}

net_sf_andhsli_hotspotlogin_20 : {
	include "Template"
	apk : "net.sf.andhsli.hotspotlogin_20.apk"
}

net_szym_barnacle_39 : {
	include "Template"
	apk : "net.szym.barnacle_39.apk"
}

nitezh_ministock_52 : {
	include "Template"
	apk : "nitezh.ministock_52.apk"
}

org_adaway_48 : {
	include "Template"
	apk : "org.adaway_48.apk"
}

org_adblockplus_android_270 : {
	include "Template"
	apk : "org.adblockplus.android_270.apk"
}

org_ametro_17 : {
	include "Template"
	apk : "org.ametro_17.apk"
}

org_billthefarmer_accordion_101 : {
	include "Template"
	apk : "org.billthefarmer.accordion_101.apk"
}

org_connectbot_365 : {
	include "Template"
	apk : "org.connectbot_365.apk"
}

org_dolphinemu_dolphinemu_11 : {
	include "Template"
	apk : "org.dolphinemu.dolphinemu_11.apk"
	srcPath : "C:\\Users\\Max\\workspace\\LotrackEvaluationAndroid\\org.dolphinemu.dolphinemu_11_src\\Source\\Android\\src\\"
}

org_gc_networktester_2 : {
	include "Template"
	apk : "org.gc.networktester_2.apk"
}

org_geometerplus_zlibrary_ui_android_108022 : {
	include "Template"
	apk : "org.geometerplus.zlibrary.ui.android_108022.apk"
}

org_jf_Penroser_6 : {
	include "Template"
	apk : "org.jf.Penroser_6.apk"
}

org_marcus905_wifi_ace_20120115 : {
	include "Template"
	apk : "org.marcus905.wifi.ace_20120115.apk"
}

org_moparisthebest_appbak_2 : {
	include "Template"
	apk : "org.moparisthebest.appbak_2.apk"
}

org_petero_droidfish_60 : {
	include "Template"
	apk : "org.petero.droidfish_60.apk"
}

org_projectmaxs_module_filewrite_15 : {
	include "Template"
	apk : "org.projectmaxs.module.filewrite_15.apk"
}

org_projectmaxs_module_ringermode_15 : {
	include "Template"
	apk : "org.projectmaxs.module.ringermode_15.apk"
}

org_recentwidget_6 : {
	include "Template"
	apk : "org.recentwidget_6.apk"
}

org_scoutant_cc_1 : {
	include "Template"
	apk : "org.scoutant.cc_1.apk"
}

org_servDroid_web_1000300 : {
	include "Template"
	apk : "org.servDroid.web_1000300.apk"
}

org_sixgun_ponyexpress_12 : {
	include "Template"
	apk : "org.sixgun.ponyexpress_12.apk"
}

org_smerty_zooborns_14 : {
	include "Template"
	apk : "org.smerty.zooborns_14.apk"
}

org_sufficientlysecure_localcalendar_6 : {
	include "Template"
	apk : "org.sufficientlysecure.localcalendar_6.apk"
}

org_sufficientlysecure_viewer_2500 : {
	include "Template"
	apk : "org.sufficientlysecure.viewer_2500.apk"
	srcPath : "C:\\Users\\Max\\workspace\\LotrackEvaluationAndroid\\org.sufficientlysecure.viewer_2500_src\\document-viewer\\src\\main\\java\\"
}

org_tunesremote_253 : {
	include "Template"
	apk : "org.tunesremote_253.apk"
}

pl_net_szafraniec_NFCTagmaker_14 : {
	include "Template"
	apk : "pl.net.szafraniec.NFCTagmaker_14.apk"
}

remuco_client_android_1 : {
	include "Template"
	apk : "remuco.client.android_1.apk"
}

ru_glesik_nostrangersms_141 : {
	include "Template"
	apk : "ru.glesik.nostrangersms_141.apk"
}

se_erikofsweden_findmyphone_12 : {
	include "Template"
	apk : "se.erikofsweden.findmyphone_12.apk"
}

se_johanhil_duckduckgo_1 : {
	include "Template"
	apk : "se.johanhil.duckduckgo_1.apk"
}

stericson_busybox_157 : {
	include "Template"
	apk : "stericson.busybox_157.apk"
}

tritop_android_SLWTrafficMeterWidget_2 : {
	include "Template"
	apk : "tritop.android.SLWTrafficMeterWidget_2.apk"
}

tritop_androidSLWCpuWidget_6 : {
	include "Template"
	apk : "tritop.androidSLWCpuWidget_6.apk"
}

uk_org_cardboardbox_wonderdroid_39 : {
	include "Template"
	apk : "uk.org.cardboardbox.wonderdroid_39.apk"
}

UnitTest1 : {
	include "Template"
	
	expectedResults : [
		 { 
		   className : "de.ecspride.MaxUnitTest1" 
		   constraints: [
		    { jimpleLine: 30, lineText: "", constraint: "MANUFACTURER_Alpha" }
			{ jimpleLine: 36, lineText: "", constraint: "(MANUFACTURER_Alpha ^ DEVICE_Alpha)" }
			{ jimpleLine: 45, lineText: "", constraint: "ACCESSIBILITY = 1" }
			{ jimpleLine: 50, lineText: "", constraint: "!(ACCESSIBILITY = 1)" }
		   ]
		 }
	]
}

UnitTest2 : {
	include "Template"
	
	expectedResults : [
		 { 
		   className : "de.ecspride.MaxUnitTest2" 
		   constraints: [
		    { jimpleLine: 54, lineText: "", constraint: "KEYBOARD = 2" }
		   ]
		 }
	]
}

UnitTest3 : {
	include "Template"
	
	expectedResults : [
		 { 
		   className : "de.ecspride.MaxUnitTest3" 
		   constraints: [
		    { jimpleLine: 62, lineText: "", constraint: "KEYBOARD = 2" }
		   ]
		 }
	]
}

UnitTest4 : {
	include "Template"
	
	expectedResults : [
		 { 
		   className : "de.ecspride.MaxUnitTest4" 
		   constraints: [
		    { jimpleLine: 64, lineText: "", constraint: "KEYBOARD = 2" }
		    { jimpleLine: 66, lineText: "", constraint: "KEYBOARD = 2" }
			{ jimpleLine: 68, lineText: "", constraint: "!(KEYBOARD = 2)" }
		   ]
		 }
	]
}

UnitTest5 : {
	include "Template"

	expectedResults : [
		 { 
		   className : "de.ecspride.MaxUnitTest5a" 
		   constraints: [
		    { jimpleLine: 64, lineText: "", constraint: "KEYBOARD = 2" }
		   ]
		 }
	]
}

UnitTest6 : {
	include "Template"
	
	methods : [ ]
	
	expectedResults : [
		 { 
		   className : "org.connectbot.ConsoleActivity" 
		   constraints: [
		       { jimpleLine: 452, lineText: "$r2 = $r0.<org.connectbot.ConsoleActivity: android.view.MenuItem disconnect>", constraint: "KEYBOARD = 2" }
		   ]
		 }
	]
}

UnitTest7 : {
	include "Template"
	
	expectedResults : [
		 { 
		   className : "de.ecspride.MaxUnitTest7" 
		   constraints: [
		    { jimpleLine: 36, lineText: "", constraint: "(!STORAGE_Alpha ^ !STORAGE_Beta)" }
		   ]
		 }
	]
}

UnitTest8 : {
	include "Template"
	
	expectedResults : [
		 { 
		   className : "de.ecspride.MaxUnitTest8" 
		   constraints: [
		    { jimpleLine: 81, lineText: "", constraint: "KEYBOARD = 2" }
		   ]
		 }
	]
}

UnitTest9 : {
	include "Template"
	
	expectedResults : [
		 { 
		   className : "org.connectbot.ConsoleActivity" 
		   constraints: [
		       // Don't know what this was about
			   //{ jimpleLine: 446, lineText: "", constraint: "true" }
		       //{ jimpleLine: 447, lineText: "", constraint: "true" }
		   ]
		 }
	]
}

UnitTest10 : {
	include "Template"
	
	expectedResults : [
		 { 
		   className : "org.connectbot.ConsoleActivity" 
		   constraints: [
		   ]
		 }
	]
}

UnitTest11 : {
	include "Template"
	
	expectedResults : [
		 { 
		   className : "de.ecspride.MaxUnitTest11"
		   constraints: [
		   	   { jimpleLine: 37, lineText: "", constraint: "KEYBOARD = 2" }
		       { jimpleLine: 42, lineText: "", constraint: "!(KEYBOARD = 2)" }
		   ]
		 }
		 { 
		   className : "de.ecspride.MaxUnitTest11Service"
		   constraints: [
		   	   { jimpleLine: 44, lineText: "", constraint: "!(STORAGE_Alpha)" }
		       { jimpleLine: 49, lineText: "", constraint: "STORAGE_Alpha" }
		       { jimpleLine: 57, lineText: "", constraint: "(STORAGE_Alpha ^ STORAGE_Beta)" }
		   ]
		 }
	]
}

UnitTest12 : {
	include "Template"
	
	expectedResults : [
		 { 
		   className : "de.ecspride.MaxUnitTest12"
		   constraints: [
		   	   { jimpleLine: 25, lineText: "", constraint: "11 <= SDK" }
		       { jimpleLine: 28, lineText: "staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("INFO", "true")", constraint: "true" }
		   ]
		 }
	]
}


GenericAndroid : {
	include "Template"
}

FreePastry : {

	srcPath : "C:\\Users\\Max\\workspace\\pastry\\src\\"
	
	features : {
		transport_use_pns : { index: 0, precise: true }
	}
	
	fieldRefs : [ 
	]
	
	methods : [
		{ name: "boolean getBoolean(java.lang.String)(\"transport_use_pns\")", feature: ${FreePastry.features.transport_use_pns} }
	]
	
	expectedResults : [
		 { 
		   className : "rice.pastry.transport.TransportPastryNodeFactory" 
		   constraints: [ 
		       { jimpleLine: 77, lineText: "", constraint: "{transport_use_pns}" }
			   { jimpleLine: 84, lineText: "", constraint: "{!transport_use_pns}" }
		   ]
		 }
		 { 
		   className : "rice.pastry.socket.nat.rendezvous.RendezvousSocketPastryNodeFactory" 
		   constraints: [ 
		       { jimpleLine: 430, lineText: "", constraint: "{transport_use_pns}" }
		   ]
		 }
	]
}

Captchalize : {

	srcPath : "C:\\Users\\Max\\workspace\\Captchalize\\src\\"
	
	features : {
		has_debug_gui : { index: 0, precise: true }
		has_debug : { index: 1, precise: true }
		has_captcha_system : { index: 2, precise: true}
		has_server_mode : { index: 3, precise: true}
		has_server_port : { index: 4, precise: true}
		max_server_connections : { index: 5, precise: true}
		max_image_size : { index: 6, precise: true}
		max_request_size : { index: 7, precise: true}
		max_image_size : { index: 8, precise: true}
		find : { index: 9, precise: true}
	}
	
	fieldRefs : [ 
	]
	
	methods : [
		{ name: "boolean hasOption(java.lang.String)(\"debug-gui\")", feature: ${Captchalize.features.has_debug_gui} }
		{ name: "boolean hasOption(java.lang.String)(\"debug\")", feature: ${Captchalize.features.has_debug} }
		{ name: "boolean hasOption(java.lang.String)(\"captcha-system\")", feature: ${Captchalize.features.has_captcha_system} }
		{ name: "boolean hasOption(java.lang.String)(\"server-mode\")", feature: ${Captchalize.features.has_server_mode} }
		{ name: "boolean hasOption(java.lang.String)(\"server-port\")", feature: ${Captchalize.features.has_server_port} }
		{ name: "boolean hasOption(java.lang.String)(\"max-server-connections\")", feature: ${Captchalize.features.max_server_connections} }
		{ name: "boolean hasOption(java.lang.String)(\"max-image-size\")", feature: ${Captchalize.features.max_image_size} }
		{ name: "boolean hasOption(java.lang.String)(\"max-request-size\")", feature: ${Captchalize.features.max_request_size} }
		{ name: "boolean hasOption(java.lang.String)(\"find\")", feature: ${Captchalize.features.find} }
	]
	
	expectedResults : [
		 { 
		   className : "cap.CommandLineInterpreter" 
		   constraints: [ 
		       { jimpleLine: 247, lineText: "", constraint: "!(has_captcha_system = 0)  " }
			   { jimpleLine: 312, lineText: "", constraint: "!(has_server_mode = 0)" }
			   { jimpleLine: 318, lineText: "", constraint: "(!has_server_mode = 0 ^ !has_server_port = 0)" }
		   ]
		 }
		 { 
		   className : "cap.http.CaptchalizeHttpServer" 
		   constraints: [ 
		       { jimpleLine: 8, lineText: "", constraint: "true" }
		   ]
		 }
	]
}

ivy : {

	srcPath : "C:\\Users\\Max\\workspace\\ant-ivy\\src\\java\\"
	
	features : {
		showhelp : { index: 0, precise: true }
		version : { index: 1, precise: true }
		novalidate : { index: 2, precise: true }
		cache : { index: 3, precise: true }
		confs : { index: 4, precise: true }
		dependency : { index: 5, precise: true }
		useOrigin : { index: 6, precise: true }
		notransitive : { index: 7, precise: true }
		refresh : { index: 8, precise: true }
		retrieve : { index: 9, precise: true }
		cachepath : { index: 10, precise: true }
		revision : { index: 11, precise: true }
		publish : { index: 12, precise: true }
		main : { index: 13, precise: true }
		cp : { index: 14, precise: true }
		m2compatible : { index: 15, precise: true }
		debug : { index: 16, precise: true }
		verbose : { index: 17, precise: true }
		warn : { index: 18, precise: true }
		error : { index: 19, precise: true }
		deprecated : { index: 20, precise: true }
		sync : { index: 21, precise: true }
		symlink : { index: 22, precise: true }
		symlinkmass : { index: 23, precise: true }
		overwrite : { index: 24, precise: true }
	}
	
	fieldRefs : [ 
	]
	
	methods : [
		{ name: "boolean hasOption(java.lang.String)(\"\\?\")", feature: ${ivy.features.showhelp} }
		{ name: "boolean hasOption(java.lang.String)(\"version\")", feature: ${ivy.features.version} }
		{ name: "boolean hasOption(java.lang.String)(\"novalidate\")", feature: ${ivy.features.novalidate} }
		{ name: "boolean hasOption(java.lang.String)(\"cache\")", feature: ${ivy.features.cache} }
		{ name: "boolean hasOption(java.lang.String)(\"confs\")", feature: ${ivy.features.confs} }
		{ name: "boolean hasOption(java.lang.String)(\"dependency\")", feature: ${ivy.features.dependency} }
	//	{ name: "boolean hasOption(java.lang.String)(\"useOrigin\")", feature: ${ivy.features.useOrigin} }
	//	{ name: "boolean hasOption(java.lang.String)(\"notransitive\")", feature: ${ivy.features.notransitive} }
	//	{ name: "boolean hasOption(java.lang.String)(\"refresh\")", feature: ${ivy.features.refresh} }
	//	{ name: "boolean hasOption(java.lang.String)(\"retrieve\")", feature: ${ivy.features.retrieve} }
	//	{ name: "boolean hasOption(java.lang.String)(\"cachepath\")", feature: ${ivy.features.cachepath} }
	//	{ name: "boolean hasOption(java.lang.String)(\"revision\")", feature: ${ivy.features.revision} }
	//	{ name: "boolean hasOption(java.lang.String)(\"publish\")", feature: ${ivy.features.publish} }
	//	{ name: "boolean hasOption(java.lang.String)(\"main\")", feature: ${ivy.features.main} }
	//	{ name: "boolean hasOption(java.lang.String)(\"cp\")", feature: ${ivy.features.cp} }
	//	{ name: "boolean hasOption(java.lang.String)(\"m2compatible\")", feature: ${ivy.features.m2compatible} }
	//	{ name: "boolean hasOption(java.lang.String)(\"debug\")", feature: ${ivy.features.debug} }
	//	{ name: "boolean hasOption(java.lang.String)(\"verbose\")", feature: ${ivy.features.verbose} }
	//	{ name: "boolean hasOption(java.lang.String)(\"warn\")", feature: ${ivy.features.warn} }
	//	{ name: "boolean hasOption(java.lang.String)(\"error\")", feature: ${ivy.features.error} }
	//	{ name: "boolean hasOption(java.lang.String)(\"deprecated\")", feature: ${ivy.features.deprecated} }
	//	{ name: "boolean hasOption(java.lang.String)(\"sync\")", feature: ${ivy.features.sync} }
	//	{ name: "boolean hasOption(java.lang.String)(\"symlink\")", feature: ${ivy.features.symlink} }
	//	{ name: "boolean hasOption(java.lang.String)(\"symlinkmass\")", feature: ${ivy.features.symlinkmass} }
	//	{ name: "boolean hasOption(java.lang.String)(\"overwrite\")", feature: ${ivy.features.overwrite} }
	]
	
	expectedResults : [
		{
		   className : "org.apache.ivy.Main" 
		   constraints: [ 
		       { jimpleLine: 862, lineText: "$z1 = virtualinvoke line.<org.apache.ivy.util.cli.CommandLine: boolean hasOption(java.lang.String)>(\"deprecated\");", constraint: "{showhelp}" }
		   ]
		}
		{
		   className : "org.apache.ivy.plugins.parser.xml.XmlModuleDescriptorParser$Parser" 
		   constraints: [ 
		       { jimpleLine: 100, lineText: "$r0 = virtualinvoke this.<org.apache.ivy.plugins.parser.xml.XmlModuleDescriptorParser$Parser: java.net.URL getSchemaURL()>();", constraint: "{!showhelp ^ !version ^ novalidate}" }
		   ]
		}		
	]
}

findbugs : {

	srcPath : "C:\\Users\\Max\\workspace\\findbugs-3.0.0\\src\\java\\"
	
	features : {
		debug : { index: 0, precise: true }
		OPEN_WORLD : { index: 1, precise: true }
		OPEN_WORLD_DEBUG : { index: 2, precise: true }
		printConfiguration : { index: 3, precise: true }
		visitors : { index: 4, precise: true }
		omitVisitors : { index: 5, precise: true }
		verbose : { index: 6, precise: true }
		listOrder : { index: 7, precise: true }
		progress : { index: 8, precise: true }
		execplan_debug : { index: 9, precise: true }
		version : { index: 10, precise: true }
	}
	
	fieldRefs : [ 
	]
	
	methods : [
		{ name: "boolean getBoolean(java.lang.String)(\"textui.debug\")", feature: ${findbugs.features.debug} }
		 { name: "boolean getBoolean(java.lang.String,boolean)(\"findbugs.openworld\", [01])", feature: ${findbugs.features.OPEN_WORLD} }
		// { name: "boolean getBoolean(java.lang.String,boolean)(\"findbugs.openworld.debug\", [01])", feature: ${findbugs.features.OPEN_WORLD_DEBUG} }
		// { name: "boolean getBoolean(java.lang.String,boolean)(\"findbugs.verbose\")", feature: ${findbugs.features.verbose} }
		// { name: "boolean getBoolean(java.lang.String,boolean)(\"findbugs.listOrder\")", feature: ${findbugs.features.listOrder} }
		// { name: "boolean getBoolean(java.lang.String,boolean)(\"findbugs.progress\")", feature: ${findbugs.features.progress} }
		// { name: "boolean getBoolean(java.lang.String,boolean)(\"findbugs.execplan.debug\")", feature: ${findbugs.features.execplan_debug} }
		
		// not very robust solution
		//{ name: "boolean equals(java.lang.Object)(\"-printConfiguration\")", feature: ${findbugs.features.printConfiguration} }
		//{ name: "boolean equals(java.lang.Object)(\"-version\")", feature: ${findbugs.features.version} }
		// { name: "boolean equals(java.lang.Object)(\"-visitors\")", feature: ${findbugs.features.visitors} }
		// { name: "boolean equals(java.lang.Object)(\"-omitVisitors\")", feature: ${findbugs.features.omitVisitors} }
	]
	
	expectedResults : [

	]
}


ElevatorChanged : {

	srcPath : "C:\\Users\\Max\\workspace\\ElevatorChanged\\src\\"
	
	features : {
		weight : { index: 0, precise: true }
		empty : { index: 1, precise: true }
		twothirdsfull : { index: 2, precise: true }
		executivefloor : { index: 3, precise: true }
		overloaded : { index: 4, precise: true }
		bottom : { index: 5, precise: true }
		verbose : { index: 6, precise: true }
	}
	
	fieldRefs : [ 
		{ name: "<ElevatorSystem.Configuration: boolean weight>", feature: ${ElevatorChanged.features.weight} }
		{ name: "<ElevatorSystem.Configuration: boolean empty>", feature: ${ElevatorChanged.features.empty} }
		{ name: "<ElevatorSystem.Configuration: boolean twothirdsfull>", feature: ${ElevatorChanged.features.twothirdsfull} }
		{ name: "<ElevatorSystem.Configuration: boolean executivefloor>", feature: ${ElevatorChanged.features.executivefloor} }
		{ name: "<ElevatorSystem.Configuration: boolean overloaded>", feature: ${ElevatorChanged.features.overloaded} }
		{ name: "<ElevatorSystem.Configuration: boolean bottom>", feature: ${ElevatorChanged.features.bottom} }
		{ name: "<ElevatorSystem.Configuration: boolean verbose>", feature: ${ElevatorChanged.features.verbose} }
	]
	
	methods : [

	]
	
	expectedResults : [
		{
		   className : "edu.umd.cs.findbugs.FindBugs2" 
		   constraints: [ 
		       // Requires implicit taints
		       { jimpleLine: 2162, lineText: "$z1 = virtualinvoke commandLine.<edu.umd.cs.findbugs.TextUICommandLine: boolean justPrintVersion()>();", constraint: "printConfiguration" }
		   ]
		}
	]
}

ZipMeChanged : {

	srcPath : "C:\\Users\\Max\\workspace\\ZipMeChanged\\src\\"
	
	features : {
		BASE : { index: 0, precise: true }
		Adler32Checksum : { index: 1, precise: true }
		ARCHIVE_CHECK : { index: 2, precise: true }
		COMPRESS : { index: 3, precise: true }
		DerivativeGZIPCRC  : { index: 4, precise: true }
		CRC : { index: 5, precise: true }
		ZIP_ME_TEST : { index: 6, precise: true }
		GZIP : { index: 7, precise: true }
		EXTRACT : { index: 8, precise: true }
		DerivativeCompressCRC : { index: 9, precise: true }
		DerivativeExtractCRC : { index: 10, precise: true }
		DerivativeCompressGZIP : { index: 11, precise: true }
		DerivativeCompressAdler32Checksum : { index: 12, precise: true }
		DerivativeCompressGZIPCRC : { index: 13, precise: true }
		GUIDSL_ROOT_PRODUCTION : { index: 14, precise: true }
	}
	
	fieldRefs : [ 
		{ name: "<net.sf.zipme.Configuration: boolean BASE>", feature: ${ZipMeChanged.features.BASE} }
		{ name: "<net.sf.zipme.Configuration: boolean Adler32Checksum>", feature: ${ZipMeChanged.features.Adler32Checksum} }
		{ name: "<net.sf.zipme.Configuration: boolean ARCHIVE_CHECK>", feature: ${ZipMeChanged.features.Adler32Checksum} }
		{ name: "<net.sf.zipme.Configuration: boolean COMPRESS>", feature: ${ZipMeChanged.features.COMPRESS} }
		{ name: "<net.sf.zipme.Configuration: boolean DerivativeGZIPCRC>", feature: ${ZipMeChanged.features.DerivativeGZIPCRC} }
		{ name: "<net.sf.zipme.Configuration: boolean CRC>", feature: ${ZipMeChanged.features.CRC} }
		{ name: "<net.sf.zipme.Configuration: boolean ZIP_ME_TEST>", feature: ${ZipMeChanged.features.ZIP_ME_TEST} }
		{ name: "<net.sf.zipme.Configuration: boolean GZIP>", feature: ${ZipMeChanged.features.GZIP} }
		{ name: "<net.sf.zipme.Configuration: boolean EXTRACT>", feature: ${ZipMeChanged.features.EXTRACT} }
		{ name: "<net.sf.zipme.Configuration: boolean DerivativeCompressCRC>", feature: ${ZipMeChanged.features.DerivativeCompressCRC} }
		{ name: "<net.sf.zipme.Configuration: boolean DerivativeExtractCRC>", feature: ${ZipMeChanged.features.DerivativeExtractCRC} }
		{ name: "<net.sf.zipme.Configuration: boolean DerivativeCompressGZIP>", feature: ${ZipMeChanged.features.DerivativeCompressGZIP} }
		{ name: "<net.sf.zipme.Configuration: boolean DerivativeCompressAdler32Checksum>", feature: ${ZipMeChanged.features.DerivativeCompressAdler32Checksum} }
		{ name: "<net.sf.zipme.Configuration: boolean DerivativeCompressGZIPCRC>", feature: ${ZipMeChanged.features.DerivativeCompressGZIPCRC} }
		{ name: "<net.sf.zipme.Configuration: boolean GUIDSL_ROOT_PRODUCTION>", feature: ${ZipMeChanged.features.GUIDSL_ROOT_PRODUCTION} }
	]
	
	methods : [

	]
	
	expectedResults : [
		{
		   className : "net.sf.zipme.InflaterInputStream" 
		   constraints: [ 
		       { jimpleLine: 40, lineText: "$r2 = new java.lang.NullPointerException", constraint: "true" }
		   ]
		}
	]
}

ZipMeChangedSimplified : {

	srcPath : "C:\\Users\\Max\\workspace\\ZipMeChangedSimplified\\src\\"
	
	features : {
		BASE : { index: 0, precise: true }
		Adler32Checksum : { index: 1, precise: true }
		ARCHIVE_CHECK : { index: 2, precise: true }
		COMPRESS : { index: 3, precise: true }
		DerivativeGZIPCRC  : { index: 4, precise: true }
		CRC : { index: 5, precise: true }
		ZIP_ME_TEST : { index: 6, precise: true }
		GZIP : { index: 7, precise: true }
		EXTRACT : { index: 8, precise: true }
		DerivativeCompressCRC : { index: 9, precise: true }
		DerivativeExtractCRC : { index: 10, precise: true }
		DerivativeCompressGZIP : { index: 11, precise: true }
		DerivativeCompressAdler32Checksum : { index: 12, precise: true }
		DerivativeCompressGZIPCRC : { index: 13, precise: true }
		GUIDSL_ROOT_PRODUCTION : { index: 14, precise: true }
	}
	
	fieldRefs : [ 
		{ name: "<net.sf.zipme.Configuration: boolean BASE>", feature: ${ZipMeChangedSimplified.features.BASE} }
		{ name: "<net.sf.zipme.Configuration: boolean Adler32Checksum>", feature: ${ZipMeChangedSimplified.features.Adler32Checksum} }
		{ name: "<net.sf.zipme.Configuration: boolean ARCHIVE_CHECK>", feature: ${ZipMeChangedSimplified.features.Adler32Checksum} }
		{ name: "<net.sf.zipme.Configuration: boolean COMPRESS>", feature: ${ZipMeChangedSimplified.features.COMPRESS} }
		{ name: "<net.sf.zipme.Configuration: boolean DerivativeGZIPCRC>", feature: ${ZipMeChangedSimplified.features.DerivativeGZIPCRC} }
		{ name: "<net.sf.zipme.Configuration: boolean CRC>", feature: ${ZipMeChangedSimplified.features.CRC} }
		{ name: "<net.sf.zipme.Configuration: boolean ZIP_ME_TEST>", feature: ${ZipMeChangedSimplified.features.ZIP_ME_TEST} }
		{ name: "<net.sf.zipme.Configuration: boolean GZIP>", feature: ${ZipMeChangedSimplified.features.GZIP} }
		{ name: "<net.sf.zipme.Configuration: boolean EXTRACT>", feature: ${ZipMeChangedSimplified.features.EXTRACT} }
		{ name: "<net.sf.zipme.Configuration: boolean DerivativeCompressCRC>", feature: ${ZipMeChangedSimplified.features.DerivativeCompressCRC} }
		{ name: "<net.sf.zipme.Configuration: boolean DerivativeExtractCRC>", feature: ${ZipMeChangedSimplified.features.DerivativeExtractCRC} }
		{ name: "<net.sf.zipme.Configuration: boolean DerivativeCompressGZIP>", feature: ${ZipMeChangedSimplified.features.DerivativeCompressGZIP} }
		{ name: "<net.sf.zipme.Configuration: boolean DerivativeCompressAdler32Checksum>", feature: ${ZipMeChangedSimplified.features.DerivativeCompressAdler32Checksum} }
		{ name: "<net.sf.zipme.Configuration: boolean DerivativeCompressGZIPCRC>", feature: ${ZipMeChangedSimplified.features.DerivativeCompressGZIPCRC} }
		{ name: "<net.sf.zipme.Configuration: boolean GUIDSL_ROOT_PRODUCTION>", feature: ${ZipMeChangedSimplified.features.GUIDSL_ROOT_PRODUCTION} }
	]
	
	methods : [

	]
	
	expectedResults : [
		{
		   className : "net.sf.zipme.InflaterInputStream" 
		   constraints: [ 
		       { jimpleLine: 40, lineText: "$r2 = new java.lang.NullPointerException", constraint: "true" }
		   ]
		}
	]
}

Validator : {

	srcPath : "C:\\Users\\Max\\workspace\\validator-master\\src\\"
	
	features : {
		VERBOSE : { index: 0, precise: true }
	}
	
	fieldRefs : [ 
		{ name: "<nu.validator.client.SimpleCommandLineValidator: boolean verbose>", feature: ${Validator.features.VERBOSE} }
	]
	
	methods : [

	]
	
	expectedResults : [

	]
}

Selenese : {

	srcPath : "C:\\Users\\Max\\workspace\\selenese-runner-java-master\\src\\main\\java\\"
	
	features : {
		highlight : { index: 0, precise: true }
		ignore-screenshot-command : { index: 1, precise: true }
		screenshot-dir : { index: 2, precise: true }
	}
	
	fieldRefs : [ 

	]
	
	methods : [
		{ name: "boolean getOptionValueAsBoolean(java.lang.String)(\"highlight\")", feature: ${Selenese.features.highlight} }
		{ name: "boolean getOptionValueAsBoolean(java.lang.String)(\"ignore-screenshot-command\")", feature: ${Selenese.features.ignore-screenshot-command} }
		{ name: "boolean hasOption(java.lang.String)(\"screenshot-dir\")", feature: ${Selenese.features.screenshot-dir} }
	]
	
	expectedResults : [

	]
}


Picard : {

	srcPath : "C:\\Users\\Max\\workspace\\picard\\src\\java\\"
	
	features : {
		COMPRESS_OUTPUTS : { index: 0, precise: true }
		APPLY_EAMSS_FILTER  : { index: 1, precise: true }
		NUM_PROCESSORS  : { index: 2, precise: true }
		FORCE_GC : { index: 3, precise: true }
		TILE_LIMIT : { index: 4, precise: true }
		BASECALLS_DIR : { index: 5, precise: false }
	} 
	
	fieldRefs : [ 
		{ name: "<picard.illumina.IlluminaBasecallsToFastq: boolean COMPRESS_OUTPUTS>", feature: ${Picard.features.COMPRESS_OUTPUTS} }
		{ name: "<picard.illumina.IlluminaBasecallsToFastq: boolean APPLY_EAMSS_FILTER>", feature: ${Picard.features.APPLY_EAMSS_FILTER} }
		{ name: "<picard.illumina.IlluminaBasecallsToFastq: java.lang.Integer NUM_PROCESSORS>", feature: ${Picard.features.NUM_PROCESSORS} }
		{ name: "<picard.illumina.IlluminaBasecallsToFastq: java.lang.Boolean FORCE_GC>", feature: ${Picard.features.FORCE_GC} }
		{ name: "<picard.illumina.IlluminaBasecallsToFastq: java.lang.Integer TILE_LIMIT>", feature: ${Picard.features.TILE_LIMIT} }	
		{ name: "<picard.illumina.IlluminaBasecallsToFastq: java.io.File BASECALLS_DIR>", feature: ${Picard.features.BASECALLS_DIR} }	
	]
	
	methods : [
	]
	
	expectedResults : [
		{
		   className : "picard.illumina.IlluminaBasecallsConverter" 
		   constraints: [ 
		       { jimpleLine: 213, lineText: "$r33 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();", constraint: "NUM_PROCESSORS = 0" }
		       { jimpleLine: 175, lineText: "$r34 = new java.util.Timer;", constraint: "!(FORCE_GC = 0)" }
		       { jimpleLine: 336, lineText: "$r14 = this.<picard.illumina.IlluminaBasecallsConverter: java.util.List tiles>;", constraint: "TILE_LIMIT" }
		   ]
		}
	]
}

epubcheck : {

	srcPath : "C:\\Users\\Max\\workspace\\epubcheck\\src\\main\\java\\"
	
	features : {
		expanded : { index: 0, precise: true }
	} 
	
	fieldRefs : [ 
		{ name: "<com.adobe.epubcheck.tool.EpubChecker: boolean expanded>", feature: ${epubcheck.features.expanded} }
	]
	
	methods : [
	]
	
	expectedResults : [

	]
}

Swagger : {

	srcPath : "C:\\Users\\Max\\workspace\\swagger-codegen\\modules\\swagger-codegen\\src\\main\\java\\"
	
	features : {
		shouldOverwrite : { index: 0, precise: true }
		debugOperations : { index: 1, precise: true }
		debugModels : { index: 2, precise: true }
		debugSupportingFiles : { index: 3, precise: true }
	} 
	
	fieldRefs : [ 
	]
	
	methods : [
		//{ name: "boolean shouldOverwrite(java.lang.String)", feature: ${Swagger.features.shouldOverwrite} }	
		{ name: "java.lang.String getProperty(java.lang.String)(\"debugOperations\")", feature: ${Swagger.features.debugOperations} }
		{ name: "java.lang.String getProperty(java.lang.String)(\"debugModels\")", feature: ${Swagger.features.debugModels} }
		{ name: "java.lang.String getProperty(java.lang.String)(\"debugSupportingFiles\")", feature: ${Swagger.features.debugSupportingFiles} }		
	]
	
	expectedResults : [
		{
		   className : "io.swagger.codegen.DefaultGenerator" 
		   constraints: [ 
		       { jimpleLine: 877, lineText: "$r71 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"debugSupportingFiles\");", constraint: "!(debugSupportingFiles_Alpha)" }
		   ]
		}
	]
}

Mahout : {


}

batman : {

	srcPath : "C:\\Users\\Max\\workspace\\batman\\src\\"
	
	features : {
		writeDB : { index: 0, precise: true }
		gff : { index: 1, precise: true }
		minBand : { index: 2, precise: false }
		calcTM : { index: 3, precise: true }
		probeLength : { index: 4, precise: false } 
		minLength : { index: 5, precise: false } 
		maxLength : { index: 6, precise: false } 
	} 
	
	fieldRefs : [ 
		{ name: "<batman.Calibrate: boolean writeDB>", feature: ${batman.features.writeDB} }
		{ name: "<batman.Calibrate: boolean gff>", feature: ${batman.features.gff} }
		{ name: "<batman.Calibrate: int minBand>", feature: ${batman.features.minBand} }
		{ name: "<batman.Calibrate: boolean calcTM>", feature: ${batman.features.calcTM} }
		{ name: "<batman.EstimateCouplingProfile: int probeLength>", feature: ${batman.features.probeLength} }
		{ name: "<batman.EstimateCouplingProfile: int minLength>", feature: ${batman.features.minLength} }
		{ name: "<batman.EstimateCouplingProfile: int maxLength>", feature: ${batman.features.maxLength} }
	]
	
	methods : [
	]
	
	expectedResults : [
		{
		   className : "batman.Calibrate" 
		   constraints: [ 
		       { jimpleLine: 637, lineText: "tmp$1221407133 = new batman.Calibrate$2;", constraint: "-1 <= minBand" }
		   ]
		}
		{
		   className : "batman.EstimateCouplingProfile" 
		   constraints: [ 
		       { jimpleLine: 94, lineText: "x#4 = ori#2;", constraint: "!(probeLength <= (- 1))" }
		   ]
		}
	]
}

opentsdb : {

	srcPath : "C:\\Users\\Max\\workspace\\opentsdb\\src\\"
	
	features : {
		enable_realtime_uid : { index: 0, precise: true }
		enable_realtime_ts : { index: 1, precise: true }
		enable_tsuid_incrementing : { index: 2, precise: true }
		enable_tsuid_tracking : { index: 3, precise: true }
		rtpublisherEnable : { index: 4, precise: true }
		searchEnable : { index: 5, precise: true }
		searchPlugin : { index: 6, precise: true }
	} 
	
	fieldRefs : [ 
	]
	
	methods : [
		{ name: "boolean enable_realtime_uid()", feature: ${opentsdb.features.enable_realtime_uid} }
		{ name: "boolean enable_realtime_ts()", feature: ${opentsdb.features.enable_realtime_ts} }
		{ name: "boolean enable_tsuid_incrementing()", feature: ${opentsdb.features.enable_tsuid_incrementing} }	
		{ name: "boolean enable_tsuid_tracking()", feature: ${opentsdb.features.enable_tsuid_tracking} }		
		{ name: "boolean getBoolean(java.lang.String)(\"tsd.rtpublisher.enable\")", feature: ${opentsdb.features.rtpublisherEnable} }	
		{ name: "boolean getBoolean(java.lang.String)(\"tsd.search.enable\")", feature: ${opentsdb.features.searchEnable} }	
		{ name: "java.lang.String getString(java.lang.String)(\"tsd.search.plugin\")", feature: ${opentsdb.features.searchPlugin} }		
	]
	
	expectedResults : [
		{
		   className : "net.opentsdb.core.TSDB" 
		   constraints: [ 
		       { jimpleLine: 931, lineText: "$r12 = this.<net.opentsdb.core.TSDB: org.hbase.async.HBaseClient client>", constraint: "!(enable_realtime_ts = 0) || !(enable_realtime_uid = 0) || !(enable_tsuid_incrementing = 0)" }
		   ]
		}
		{
		   className : "net.opentsdb.core.TSDB" 
		   constraints: [ 
		       { jimpleLine: 2028, lineText: "$r65 = new java.lang.IllegalArgumentException", constraint: "(!searchEnable = 0 ^ !searchPlugin_Alpha)" }
		   ]
		}	
	]
}

trackanalyzer : {

	srcPath : "C:\\Users\\Max\\workspace\\trackanalyzer\\src\\"
	
	features : {
		writeTags : { index: 0, precise: true }
		hiQuality : { index: 1, precise: true }
		writeList : { index: 2, precise: false }
		noBpm : { index: 3, precise: true }		
		filelist : { index: 4, precise: false }
		help : { index: 5, precise: true }
		debug : { index: 6, precise: true }
	} 
	
	fieldRefs : [ 
		{ name: "<TrackAnalyzer.CommandLineArgs: boolean writeTags>", feature: ${trackanalyzer.features.writeTags} }
		{ name: "<TrackAnalyzer.CommandLineArgs: boolean hiQuality>", feature: ${trackanalyzer.features.hiQuality} }
		{ name: "<TrackAnalyzer.CommandLineArgs: java.lang.String writeList>", feature: ${trackanalyzer.features.writeList} }
		{ name: "<TrackAnalyzer.CommandLineArgs: boolean noBpm>", feature: ${trackanalyzer.features.noBpm} }
		{ name: "<TrackAnalyzer.CommandLineArgs: java.lang.String fileList>", feature: ${trackanalyzer.features.filelist} }
		{ name: "<TrackAnalyzer.CommandLineArgs: boolean help>", feature: ${trackanalyzer.features.help} }
		{ name: "<TrackAnalyzer.CommandLineArgs: boolean debug>", feature: ${trackanalyzer.features.debug} }
	]
	
	methods : [
	
	]
	
	expectedResults : [
		{
		   className : "TrackAnalyzer.TrackAnalyzer" 
		   constraints: [ 
		       { jimpleLine: 443, lineText: "bpm#8 = staticinvoke <at.ofai.music.beatroot.BeatRoot: double getBPM(java.lang.String)>(wavfilename#1);", constraint: "noBpm = 0" }
		   ]
		}	
	]
}

OpenGrok : {

	srcPath : "C:\\Users\\Max\\workspace\\OpenGrok\\src\\"
	
	features : {
		LucenceLocking : { index: 0, precise: true }
		ScanningDepth  : { index: 1, precise: true }
		useHistoryCache : { index: 2, precise: true }
	} 
	
	fieldRefs : [ 
		//{ name: "<org.opensolaris.opengrok.configuration.Configuration : boolean useLuceneLocking>", feature: ${OpenGrok.features.LucenceLocking} }
		//{ name: "<org.opensolaris.opengrok.configuration.Configuration : int scanningDepth>", feature: ${OpenGrok.features.ScanningDepth} }
	]
	
	methods : [
		{ name: "boolean isUsingLuceneLocking()", feature: ${OpenGrok.features.LucenceLocking} }
		//{ name: "int getScanningDepth()", feature: ${OpenGrok.features.ScanningDepth} }
		{ name: "boolean useHistoryCache()", feature: ${OpenGrok.features.useHistoryCache} }
	]
	
	expectedResults : [
		{
		   className : "org.opensolaris.opengrok.index.IndexDatabase" 
		   constraints: [ 
		       { jimpleLine: 1438, lineText: "$r16 = <org.apache.lucene.store.NoLockFactory: org.apache.lucene.store.NoLockFactory INSTANCE>", constraint: "LucenceLocking = 0" }
		   ]
		}	
		{
		   className : "org.opensolaris.opengrok.history.HistoryGuru" 
		   constraints: [ 
		       { jimpleLine: 353, lineText: "$i3 = depth + 1;", constraint: "ScanningDepth_Alpha" }
			   { jimpleLine: 54, lineText: "$z1 = virtualinvoke env.<org.opensolaris.opengrok.configuration.RuntimeEnvironment: boolean storeHistoryCacheInDB()>()", constraint: "!(useHistoryCache = 0)" }
		   ]
		}	
	]
}

platypus : {
// https://github.com/codehaus/platypus/
	srcPath : "C:\\Users\\Max\\workspace\\LotrackEvaluationJava\\platypus\\src\\main\\java\\"
	
	features : {
		clVerbose : { index: 0, precise: true }
		clVVerbose : { index: 1, precise: true }
		help : { index: 2, precise: true }
		format : { index: 3, precise: true }
		inputFile : { index: 4, precise: true }
		fontlist : { index: 5, precise: true }
		passthroughReplacedCommands : { index: 6, precise: true }
		passThroughEscapeChar : { index: 7, precise: true }
		doesPlatypusParse : { index: 8, precise: true }
	} 

	
	fieldRefs : [ ]
		
	methods : [
		{ name: "boolean isClVerbose()", feature: ${platypus.features.clVerbose} }
		{ name: "boolean isClVVerbose()", feature: ${platypus.features.clVVerbose} }
		{ name: "boolean hasOption(java.lang.String)(\"help\")", feature: ${platypus.features.help} }
		{ name: "boolean hasOption(java.lang.String)(\"fontlist\")", feature: ${platypus.features.fontlist} }
		{ name: "java.lang.String getOptionValue(java.lang.String)(\"format\")", feature: ${platypus.features.format} }
		{ name: "java.lang.String getOptionValue(java.lang.String)(\"inputFile\")", feature: ${platypus.features.inputFile} }
		{ name: "boolean passthroughReplacedCommands(org.pz.platypus.GDD)", feature: ${platypus.features.passthroughReplacedCommands} }
		{ name: "boolean passThroughEscapeChar()", feature: ${platypus.features.passThroughEscapeChar} }
		{ name: "boolean doesPlatypusParse(org.pz.platypus.PropertyFile,java.lang.String)", feature: ${platypus.features.doesPlatypusParse} }
	]
	
	expectedResults : [ 
		{
		   className : "org.pz.platypus.GDD" 
		   constraints: [ 
		       { jimpleLine: 361, lineText: "$r0 = new java.text.SimpleDateFormat", constraint: "!(clVerbose = 0)" }
		   ]
		}	
		{
		   className : "org.pz.platypus.Platypus" 
		   constraints: [ 
		       { jimpleLine: 523, lineText: "$r1 = virtualinvoke gdd#1.<org.pz.platypus.GDD: org.pz.platypus.TokenList getInputTokens()>()", constraint: "!(clVVerbose = 0)" }
		   ]
		}	
		{
		   className : "org.pz.platypus.TokenList" 
		   constraints: [ 
		       { jimpleLine: 49, lineText: "toks = virtualinvoke this.<org.pz.platypus.TokenList: java.lang.Object[] toArray()>()", constraint: "!(clVVerbose = 0)" }
		   ]
		}	
	]
	
}

kafkaDispatch : {
// https://github.com/DBCDK/kafka-dispatch
	srcPath : "C:\\Users\\Max\\workspace\\LotrackEvaluationJava\\kafka-dispatch\\src\\main\\java\\"
	
	features : {
		verbose : { index: 0, precise: true }
		topic : { index: 1, precise: true }
		showstats : { index: 2, precise: true }
		help : { index: 3, precise: true }
		servers : { index: 4, precise: true }
		verbose : { index: 5, precise: true }
		benchmark : { index: 6, precise: true }
	} 

	
	fieldRefs : [ 
		{ name: "<dk.dbc.kafka.dispatch.CommandLineArgs: int benchmarkCount>", feature: ${kafkaDispatch.features.benchmark} }
	]
		
	methods : [
		{ name: "java.lang.String getProperty(java.lang.String)(\"kafkadispatch.verbose\")", feature: ${kafkaDispatch.features.verbose} }
		{ name: "java.lang.String getProperty(java.lang.String)(\"kafkadispatch.topic\")", feature: ${kafkaDispatch.features.topic} }
		{ name: "java.lang.String getProperty(java.lang.String)(\"kafkadispatch.showstats\")", feature: ${kafkaDispatch.features.showstats} }
		{ name: "boolean isHelp()", feature: ${kafkaDispatch.features.help} }
		{ name: "java.lang.String getServers()", feature: ${kafkaDispatch.features.servers} }
		{ name: "java.lang.String getTopic()", feature: ${kafkaDispatch.features.topic} }
		{ name: "boolean isVerbose()", feature: ${kafkaDispatch.features.verbose} }

	]
	
	expectedResults : [ 
		
	]
	
}


data_consumer : {
// https://github.com/fg-netzwerksicherheit/programming-language-barriers-analysis-prototype/tree/master/java/data_consumer
	srcPath : "C:\\Users\\Max\\workspace\\LotrackEvaluationJava\\programming-language-barriers-analysis-prototype\\java\\data_consumer\\src\\"
	
	features : {
		bulkSize : { index: 0, precise: true }
		runDuration : { index: 1, precise: true }
		statsOutInterval : { index: 2, precise: true }
		dataInstanceSize : { index: 3, precise: true }
		connectionMethod : { index: 4, precise: true }
		fifoName : { index: 5, precise: true }
		portNumber : { index: 6, precise: true }
		help : { index: 7, precise: true }
	} 

	
	fieldRefs : [ ]
		
	methods : [
		{ name: "int getBulkSize()", feature: ${data_consumer.features.bulkSize} }
		{ name: "int getRunDuration()", feature: ${data_consumer.features.runDuration} }
		{ name: "int getStatsOutInterval()", feature: ${data_consumer.features.statsOutInterval} }
		{ name: "int getDataInstanceSize()", feature: ${data_consumer.features.dataInstanceSize} }
		{ name: "java.lang.String getConnectionMethod()", feature: ${data_consumer.features.connectionMethod} }
		{ name: "java.lang.String getFifoName()", feature: ${data_consumer.features.fifoName} }
		{ name: "int getPortNumber()", feature: ${data_consumer.features.portNumber} }
		{ name: "boolean getHelp()", feature: ${data_consumer.features.help} }
	]
	
	expectedResults : [ 
		
	]
	
}

andsync_server : {
//https://github.com/inovex/andsync-server
	srcPath : "C:\\Users\\Max\\workspace\\LotrackEvaluationJava\\andsync-server\\src\\"
	
	features : {
		help : { index: 0, precise: true }
		configFile : { index: 1, precise: true }
		logLevel : { index: 2, precise: true }
		port : { index: 3, precise: true }
		gcmKey : { index: 4, precise: true }
		mongoHost : { index: 5, precise: true }
		mongoPort : { index: 6, precise: true }
		mongoDb : { index: 7, precise: true }
	} 

	
	fieldRefs : [ ]
		
	methods : [
		{ name: "boolean getHelp()", feature: ${andsync_server.features.help} }
		{ name: "java.lang.String getConfigFile()", feature: ${andsync_server.features.configFile} }
		{ name: "java.util.logging.Level getLogLevel()", feature: ${andsync_server.features.logLevel} }
		{ name: "int getPort()", feature: ${andsync_server.features.port} }
		{ name: "java.lang.String getGcmKey()", feature: ${andsync_server.features.gcmKey} }
		{ name: "java.lang.String getMongoHost()", feature: ${andsync_server.features.mongoHost} }
		{ name: "int getMongoPort()", feature: ${andsync_server.features.mongoPort} }
		{ name: "java.lang.String getMongoDb()", feature: ${andsync_server.features.mongoDb} }
	]
	
	
	expectedResults : [ 
		
	]
	
}

proteaj : {
// https://github.com/csg-tokyo/proteaj
	srcPath : "C:\\Users\\Max\\workspace\\LotrackEvaluationJava\\proteaj\\src\\"
	
	features : {
		destination  : { index: 0, precise: true }
		additionalClassPath  : { index: 1, precise: true }
		usageFlag  : { index: 2, precise: true }
		versionFlag  : { index: 3, precise: true }
		isDebugMode  : { index: 4, precise: true }
		translateToJava  : { index: 5, precise: true }
	} 
	
	fieldRefs : [ 
		{ name: "<proteaj.CommandLineArgs: java.lang.String destination>", feature: ${proteaj.features.destination} }
		{ name: "<proteaj.CommandLineArgs: java.lang.String additionalClassPath>", feature: ${proteaj.features.additionalClassPath} }
		{ name: "<proteaj.CommandLineArgs: boolean usageFlag>", feature: ${proteaj.features.usageFlag} }
		{ name: "<proteaj.CommandLineArgs: boolean versionFlag>", feature: ${proteaj.features.versionFlag} }
		{ name: "<proteaj.CommandLineArgs: boolean isDebugMode>", feature: ${proteaj.features.isDebugMode} }
		{ name: "<proteaj.CommandLineArgs: boolean translateToJava>", feature: ${proteaj.features.translateToJava} }
	]
		
	methods : [

	]
	
	
	expectedResults : [ 
		
	]
	
}

adligo : {
// https://github.com/adligo/fabricate.adligo.org
	srcPath : "C:\\Users\\Max\\workspace\\LotrackEvaluationJava\\fabricate.adligo.org\\src\\"
	
	features : {
		java : { index: 0, precise: true }
		start : { index: 1, precise: true }
		decryptInput : { index: 2, precise: true }
		encryptInput : { index: 3, precise: true }
		threads : { index: 4, precise: true }
		xms : { index: 5, precise: true }
		xmx : { index: 6, precise: true }
	} 
	
	fieldRefs : [ 

	]
		
	methods : [
		{ name: "java.lang.String getArgValue(java.lang.String)(\"java\")", feature: ${adligo.features.java} }
		{ name: "java.lang.String getArgValue(java.lang.String)(\"start\")", feature: ${adligo.features.start} }
		{ name: "java.lang.String getArgValue(java.lang.String)(\"decryptInput\")", feature: ${adligo.features.decryptInput} }
		{ name: "java.lang.String getArgValue(java.lang.String)(\"encryptInput\")", feature: ${adligo.features.encryptInput} }
		{ name: "int getThreads()", feature: ${adligo.features.threads} }
		//{ name: "java.lang.String getXms()", feature: ${adligo.features.xms} }
		//{ name: "java.lang.String getXmx()", feature: ${adligo.features.xmx} }
	]
	
	
	expectedResults : [ 
		
	]
	
}

remoterengine : {
// https://github.com/rforge/remoterengine/tree/master/pkg
	srcPath : "C:\\Users\\Max\\workspace\\LotrackEvaluationJava\\remoterengine\\pkg\\RemoteREngine\\inst\\java_src\\src\\"
	
	features : {
		registryPort : { index: 0, precise: true }
		servicePort : { index: 1, precise: true }
		name : { index: 2, precise: true }
		debug : { index: 3, precise: true }
		init : { index: 4, precise: true }
	} 
	
	fieldRefs : [ 

	]
		
	methods : [
		{ name: "java.lang.Object get(java.lang.Object)(\"registryPort\")", feature: ${remoterengine.features.registryPort} }
		{ name: "java.lang.Object get(java.lang.Object)(\"servicePort\")", feature: ${remoterengine.features.servicePort} }
		{ name: "java.lang.Object get(java.lang.Object)(\"name\")", feature: ${remoterengine.features.name} }
		{ name: "java.lang.Object get(java.lang.Object)(\"debug\")", feature: ${remoterengine.features.debug} }
		{ name: "java.lang.Object get(java.lang.Object)(\"init\")", feature: ${remoterengine.features.init} }
	]
	
	
	expectedResults : [ 
		
	]
	
}

MGrid : {
	// https://github.com/shashankkr/MGrid
	srcPath : "C:\\Users\\Max\\workspace\\LotrackEvaluationJava\\MGrid\\src\\"
	
	features : {
		mode : { index: 0, precise: true }
		DebugLevel : { index: 1, precise: true }
		LocalPort  : { index: 2, precise: true }
		LogFile  : { index: 3, precise: true }
		PropertyFile  : { index: 4, precise: true }
		StartListener : { index: 5, precise: true }
		VerboseMode : { index: 6, precise: true }
		ReplicationFactor : { index: 7, precise: true }
		DebugMode : { index: 8, precise: true }
		TestMode : { index: 9, precise: true }
		SuperPeer : { index: 10, precise: true }
		MonitoredMode : { index: 11, precise: true }
		CompressionLevel : { index: 12, precise: true }
		BootstrapHosts : { index: 13, precise: true }
		ReplicationBalance : { index: 14, precise: true }
		ExchangeRate : { index: 15, precise: true }
		RoutingTable : { index: 16, precise: true }
		RangeQueryAlgorithm : { index: 17, precise: true }
		RandomSearches : { index: 18, precise: true }
		MessageMapping : { index: 19, precise: true }
		MaxReferences : { index: 20, precise: true }
		MaxRecursions : { index: 21, precise: true }
		MaxFidgets : { index: 23, precise: true }
		TreeDbFile : { index: 24, precise: true }
		TreeIniFile : { index: 25, precise: true }
		InMemoryDB : { index: 26, precise: true }
		DynamicJoin : { index: 27, precise: true }
		IndexTable : { index: 28, precise: true }
		ConnectionSpeed : { index: 29, precise: true }
		BootstrapHosts : { index: 30, precise: true }
		BehindFirewall : { index: 31, precise: true }
		ResolveIPs : { index: 32, precise: true }
		InitiateExchanges : { index: 33, precise: true }
		MonitoringHost : { index: 34, precise: true }
		FileDistribution : { index: 35, precise: true }
		ReplicationStartTime : { index: 36, precise: true }
		ConstructionStartTime : { index: 37, precise: true }
		MinimumStorage : { index: 38, precise: true }
		IdentityMinQuorum : { index: 39, precise: true }
		ConnectionAttempts : { index: 40, precise: true }
		MaintenancePolitic : { index: 41, precise: true }
		CoDMaxStale : { index: 42, precise: true }
		Challenge : { index: 43, precise: true }
		UseSSLSockets : { index: 44, precise: true }
		SSLKeyStorePwd : { index: 45, precise: true }
		SSLTrustStorePwd : { index: 46, precise: true }
		Path : { index: 47, precise: true }
		X1bits : { index: 48, precise: true }
		X2bits : { index: 49, precise: true }
		BalancedTrie : { index: 50, precise: true }
		Port : { index: 51, precise: true }
		DataType : { index: 52, precise: true }
		HBaseUserTable : { index: 53, precise: true }
	} 
	
	fieldRefs : [ 
		{ name: "<pgrid.network.router.TopologicRoutingStrategy: java.lang.String MODE>", feature: ${MGrid.features.mode} }
	]
		
	methods : [
		{ name: "java.lang.String getProperty(java.lang.String)(\"DebugLevel\")", feature: ${MGrid.features.DebugLevel} }
		{ name: "java.lang.String getProperty(java.lang.String)(\"LocalPort\")", feature: ${MGrid.features.LocalPort} }
		{ name: "java.lang.String getProperty(java.lang.String)(\"LogFile\")", feature: ${MGrid.features.LogFile} }
		{ name: "java.lang.String getProperty(java.lang.String)(\"PropertyFile\")", feature: ${MGrid.features.PropertyFile} }
		{ name: "java.lang.String getProperty(java.lang.String)(\"StartListener\")", feature: ${MGrid.features.StartListener} }
		{ name: "java.lang.String getProperty(java.lang.String)(\"VerboseMode\")", feature: ${MGrid.features.VerboseMode} }
		{ name: "java.lang.String getProperty(java.lang.String)(\"ReplicationFactor\")", feature: ${MGrid.features.ReplicationFactor} }
		{ name: "java.lang.String getProperty(java.lang.String)(\"MonitoringHost\")", feature: ${MGrid.features.MonitoringHost} }
		{ name: "java.lang.String getProperty(java.lang.String)(\"FileDistribution\")", feature: ${MGrid.features.FileDistribution} }
		{ name: "boolean propertyBoolean(java.lang.String)(\"DebugMode\")", feature: ${MGrid.features.DebugMode} }
		{ name: "boolean propertyBoolean(java.lang.String)(\"TestMode\")", feature: ${MGrid.features.TestMode} }
		{ name: "boolean propertyBoolean(java.lang.String)(\"SuperPeer\")", feature: ${MGrid.features.SuperPeer} }
		{ name: "boolean propertyBoolean(java.lang.String)(\"MonitoredMode\")", feature: ${MGrid.features.MonitoredMode} }
		{ name: "boolean propertyBoolean(java.lang.String)(\"ReplicationBalance\")", feature: ${MGrid.features.ReplicationBalance} }
		{ name: "boolean propertyBoolean(java.lang.String)(\"InMemoryDB\")", feature: ${MGrid.features.InMemoryDB} }
		{ name: "boolean propertyBoolean(java.lang.String)(\"DynamicJoin\")", feature: ${MGrid.features.DynamicJoin} }
		{ name: "boolean propertyBoolean(java.lang.String)(\"BehindFirewall\")", feature: ${MGrid.features.BehindFirewall} }
		{ name: "boolean propertyBoolean(java.lang.String)(\"ResolveIPs\")", feature: ${MGrid.features.ResolveIPs} }
		{ name: "boolean propertyBoolean(java.lang.String)(\"InitiateExchanges\")", feature: ${MGrid.features.InitiateExchanges} }
		{ name: "boolean propertyBoolean(java.lang.String)(\"Challenge\")", feature: ${MGrid.features.Challenge} }
		{ name: "boolean propertyBoolean(java.lang.String)(\"UseSSLSockets\")", feature: ${MGrid.features.UseSSLSockets} }
		{ name: "boolean propertyBoolean(java.lang.String)(\"BalancedTrie\")", feature: ${MGrid.features.BalancedTrie} }
		{ name: "int propertyInteger(java.lang.String)(\"CompressionLevel\")", feature: ${MGrid.features.CompressionLevel} }
		{ name: "int propertyInteger(java.lang.String)(\"ExchangeRate\")", feature: ${MGrid.features.ExchangeRate} }
		{ name: "int propertyInteger(java.lang.String)(\"RandomSearches\")", feature: ${MGrid.features.RandomSearches} }
		{ name: "int propertyInteger(java.lang.String)(\"MaxReferences\")", feature: ${MGrid.features.MaxReferences} }
		{ name: "int propertyInteger(java.lang.String)(\"MaxRecursions\")", feature: ${MGrid.features.MaxRecursions} }
		{ name: "int propertyInteger(java.lang.String)(\"MaxFidgets\")", feature: ${MGrid.features.MaxFidgets} }
		{ name: "int propertyInteger(java.lang.String)(\"ConnectionSpeed\")", feature: ${MGrid.features.ConnectionSpeed} }
		{ name: "int propertyInteger(java.lang.String)(\"MinimumStorage\")", feature: ${MGrid.features.MinimumStorage} }
		{ name: "int propertyInteger(java.lang.String)(\"IdentityMinQuorum\")", feature: ${MGrid.features.IdentityMinQuorum} }
		{ name: "int propertyInteger(java.lang.String)(\"ConnectionAttempts\")", feature: ${MGrid.features.ConnectionAttempts} }
		{ name: "int propertyInteger(java.lang.String)(\"CoDMaxStale\")", feature: ${MGrid.features.CoDMaxStale} }
		{ name: "long propertyLong(java.lang.String)(\"ReplicationStartTime\")", feature: ${MGrid.features.ReplicationStartTime} }
		{ name: "long propertyLong(java.lang.String)(\"ConstructionStartTime\")", feature: ${MGrid.features.ConstructionStartTime} }
		{ name: "java.lang.String propertyString(java.lang.String)(\"BootstrapHosts\")", feature: ${MGrid.features.BootstrapHosts} }
		{ name: "java.lang.String propertyString(java.lang.String)(\"RoutingTable\")", feature: ${MGrid.features.RoutingTable} }
		{ name: "java.lang.String propertyString(java.lang.String)(\"RangeQueryAlgorithm\")", feature: ${MGrid.features.RangeQueryAlgorithm} }
		{ name: "java.lang.String propertyString(java.lang.String)(\"MessageMapping\")", feature: ${MGrid.features.MessageMapping} }
		{ name: "java.lang.String propertyString(java.lang.String)(\"TreeDbFile\")", feature: ${MGrid.features.TreeDbFile} }
		{ name: "java.lang.String propertyString(java.lang.String)(\"TreeIniFile\")", feature: ${MGrid.features.TreeIniFile} }
		{ name: "java.lang.String propertyString(java.lang.String)(\"IndexTable\")", feature: ${MGrid.features.IndexTable} }
		{ name: "java.lang.String propertyString(java.lang.String)(\"BootstrapHosts\")", feature: ${MGrid.features.BootstrapHosts} }
		{ name: "java.lang.String propertyString(java.lang.String)(\"MaintenancePolitic\")", feature: ${MGrid.features.MaintenancePolitic} }
		{ name: "java.lang.String propertyString(java.lang.String)(\"SSLKeyStorePwd\")", feature: ${MGrid.features.SSLKeyStorePwd} }
		{ name: "java.lang.String propertyString(java.lang.String)(\"SSLTrustStorePwd\")", feature: ${MGrid.features.SSLTrustStorePwd} }
		{ name: "java.lang.String propertyString(java.lang.String)(\"Path\")", feature: ${MGrid.features.Path} }
		{ name: "java.lang.String propertyString(java.lang.String)(\"X1bits\")", feature: ${MGrid.features.X1bits} }
		{ name: "java.lang.String propertyString(java.lang.String)(\"X2bits\")", feature: ${MGrid.features.X2bits} }
		{ name: "java.lang.String propertyString(java.lang.String)(\"Port\")", feature: ${MGrid.features.Port} }
		{ name: "java.lang.String propertyString(java.lang.String)(\"DataType\")", feature: ${MGrid.features.DataType} }
		{ name: "java.lang.String propertyString(java.lang.String)(\"HBaseUserTable\")", feature: ${MGrid.features.HBaseUserTable} }
	]
	
	
	expectedResults : [ 
		
	]
	
}

jmxetric : {
// https://github.com/ganglia/jmxetric
	srcPath : "C:\\Users\\Max\\workspace\\LotrackEvaluationJava\\jmxetric\\src\\main\\java\\"
	
	features : {
		host : { index: 0, precise: true }
		port : { index: 1, precise: true }
		config : { index: 2, precise: true }
		mode : { index: 3, precise: true }
		wireformat : { index: 4, precise: true }
		processName : { index: 5, precise: true }
		spoof : { index: 6, precise: true }
	} 
	
	fieldRefs : [ 

	]
		
	methods : [
		{ name: "java.lang.String getHost()", feature: ${jmxetric.features.host} }
		{ name: "java.lang.String getPort()", feature: ${jmxetric.features.port} }
		{ name: "java.lang.String getConfig()", feature: ${jmxetric.features.config} }
		{ name: "java.lang.String getMode()", feature: ${jmxetric.features.mode} }
		{ name: "java.lang.String getWireformat()", feature: ${jmxetric.features.wireformat} }
		{ name: "java.lang.String getProcessName()", feature: ${jmxetric.features.processName} }
		{ name: "java.lang.String getSpoof()", feature: ${jmxetric.features.spoof} }
	]
	
	
	expectedResults : [ 
		
	]
	
}


WarGameofThrones : {
//https://github.com/marcelleguine/war-game-of-thrones/
	srcPath : "C:\\Users\\Max\\workspace\\LotrackEvaluationJava\\war-game-of-thrones\\projeto\\War Game of Thrones\\src\\"
	
	features : {
		JUMP_TO_GAME : { index: 0, precise: true }
		JUMP_TO_STATISTICS : { index: 1, precise: true }
		FULLSCREEN : { index: 2, precise: true }
		SINGLE_CLICK_STOP_DICES : { index: 3, precise: true }
		RANDOM_PLAYER_ORDER : { index: 4, precise: true }
		ATK_WIN_ALWAYS : { index: 5, precise: true }
		ATK_LOSE_ALWAYS : { index: 6, precise: true }
		ACCEPT_INVALID_NAMES : { index: 7, precise: true }
		ACCEPT_LESS_THAN_3_PLAYERS : { index: 8, precise: true }
	} 
	
	fieldRefs : [ 
		{ name: "<main.Constants: boolean JUMP_TO_GAME>", feature: ${WarGameofThrones.features.JUMP_TO_GAME} }
		{ name: "<main.Constants: boolean JUMP_TO_STATISTICS>", feature: ${WarGameofThrones.features.JUMP_TO_STATISTICS} }
		{ name: "<main.Constants: boolean FULLSCREEN>", feature: ${WarGameofThrones.features.FULLSCREEN} }
		{ name: "<main.Constants: boolean SINGLE_CLICK_STOP_DICES>", feature: ${WarGameofThrones.features.SINGLE_CLICK_STOP_DICES} }
		{ name: "<main.Constants: boolean RANDOM_PLAYER_ORDER>", feature: ${WarGameofThrones.features.RANDOM_PLAYER_ORDER} }
		{ name: "<main.Constants: boolean ATK_WIN_ALWAYS>", feature: ${WarGameofThrones.features.ATK_WIN_ALWAYS} }
		{ name: "<main.Constants: boolean ATK_LOSE_ALWAYS>", feature: ${WarGameofThrones.features.ATK_LOSE_ALWAYS} }
		{ name: "<main.Constants: boolean ACCEPT_INVALID_NAMES>", feature: ${WarGameofThrones.features.ACCEPT_INVALID_NAMES} }
		{ name: "<main.Constants: boolean ACCEPT_LESS_THAN_3_PLAYERS>", feature: ${WarGameofThrones.features.ACCEPT_LESS_THAN_3_PLAYERS} }
	]
		
	methods : [

	]
	
	
	expectedResults : [ 
		
	]
	
}